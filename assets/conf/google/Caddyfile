# This Caddyfile contains a full example of using Google
# Authentication and Caddy.

# This is a simplified version of the "multihost" example -- but only has one
# hostname.

example.com {
	route /auth* {
		authp {
			crypto key sign-verify secretpassword
			# All hosts using this auth must be in cookie_domain.
			cookie domain example.com
			# optional settings so auth lasts longer
			crypto default token lifetime 604800
			cookie lifetime 604800
			# backend google <client_id> <client_secret>
			# put your client_id and client_secret from Google Cloud Console here:
			backend google 1234567890-a1b2c3d4e5f6g7.apps.googleusercontent.com abcd-efg-123456
			# Here you can add specific roles to individual
			# user accounts:
			transform user {
				exact match email "john@gmail.com"
				action add roles viewer
			}
			transform user {
				exact match email "sally@gmail.com"
				action add roles viewer admin
			}
		}
	}

	route {
		authorize {
			# makes this block referencable later with a bare authorize directive
			primary yes
			# must match the crypto key password in the authp block above.
			crypto key verify secretpassword
			# must point to the authp host above
			set auth url https://auth.example.com/auth
			# role "viewer" is allowed everywhere.
			allow roles viewer
		}

		# This respond is just a placeholder for whatever real content
		# you want to serve, i.e. local files or a reverse_proxy.
		respond * "This is the protected content!" 200
	}
}